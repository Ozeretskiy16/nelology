Типовой сервис вопросов и ответов https://ozeretskiy.ru/.
•	Система реализована на PHP, использована MVC архитектура, ЧПУ.
•	Все компоненты системы реализованы с использованием ООП.
•	В качестве СУДБ использован MySQL.
Проект состоит из:
•	папки “components”, которая содержит основные компоненты, необходимые для работы выстроенной системы;
•	папки “config”, содержащей массив параметров подключения к базе данных и массив маршрутов;
•	папки “controllers”, содержащей контроллеры;
•	папки “models”, содержащей модели;
•	папки “views”, содержащей представления;
•	файла index.php – front controller;
Общее описание системы:
Запросы пользователя направляются на front controller:
-файл index.php – front controller: содержит общие настройки системы, обеспечивает подключение файлов системы, создаёт объект класса Router:
- файл Router.php - обработчик маршрутов, который принимает и обрабатывает строку запроса, если соответствующий запрос существует в массиве маршрутов, вызывает необходимый метод у определенного класса; если метод не найдет, перенаправляет на страницу 404.
Организация маршрутов использует следующую систему имён:
Контроллеры начинаются с слова-идентификатора, обозначающего на какой контроллер передать управление, и ключевого слова “Controller”;
Action, методы, реагирующие на действия пользователя, состоят из ключевого слова “action” и слова-идентификатора.
Например:
 '' => 'site/index', // actionIndex в SiteController
То есть, при запросе “ https://ozeretskiy.ru/ “ будет вызван метод “actionIndex” в контроллере “SiteController”
	Далее, выбранный контроллер обращается к необходимой модели, и подключает необходимый вид.
Файлы проекта:
index.php – front controller: содержит общие настройки системы, обеспечивает подключение файлов системы, создаёт объект класса Router.
Components:
- Autoload.php – подключение классов;
- Db.php – подключение к базе данных;
- Router.php – обработчик маршрутов: принимает и обрабатывает строку запроса, если соответствующий запрос существует в массиве маршрутов, вызывает необходимый метод у определенного класса; если метод не найдет, перенаправляет на страницу 404;
Config:
- db_params.php – параметры подключения к базе данных;
- routes.php – массив с маршрутами;
Controllers:
- AdminController.php – контроллер, отвечающий за страницы вывода списка администраторов, удаление администраторов, создание новых администраторов, изменение паролей существующих администраторов, а так же авторизацию;
- QuestionController.php – контроллер, отвечающий за страницы вывода списка вопросов, создания новых вопросов и ответов, а так же редактирования и удаления вопросов;
- SiteController.php – контроллер, отвечающий за главные страницы сайта, а также страницу 404;
- TopicController.php – контроллер, отвечающий за создание, удаление и вывод списка тем;
Models:
- AdminAction.php – класс, для выполнения действий над администраторами:
создание, изменение, удаление;
- AdminCheck.php – класс, для проверки валидности администраторов;
- AdminList.php – класс, для работы со списками администраторов;
- QuestionAction.php – класс, для выполнения действий над вопросами
создание, изменение, удаление;
- QuestionCheck.php – класс, для проверки валидности вопросов;
- QuestionList.php – класс, для работы со списками вопросов;
- QuestionCount.php – класс, для подсчета колличества вопросов;
- TopicAction.php – класс, для выполнения действий над темами:
создание, изменение, удаление;
- TopicCheck.php – класс, для проверки валидности тем;
- TopicList.php - класс, для работы со списками тем;

  Views:
Admin:
- auth.php – страница авторизации;
- create.php – страница создания нового администратора;
- delete.php – страница удаления администратора;
- index.php – страница со списком существующих администраторов;
- update.php – страница изменения пароля существующего администратора;
Answer:
- answer.php – страница ответа на вопрос;
- index.php – страница с не отвеченными вопросами;
Layouts:
-header.php – «шапка» клиентской части;
-footer.php – «подвал» клиентской части;
-header_admin.php – «шапка» панели администратора;
-footer_admin.php – «подвал» панели администратора;
Question:
-ask – страница, где посетитель может задать вопрос;
- delete.php – страница удаления вопроса;
- index.php – страница с параметрами конкретного вопроса;
- update.php – страница изменения параметров вопроса;
Site:
- 404.php – страница 404;
- index.php – главная страница сайта, содержащая 10 последних вопросов;
- topic.php – страница с вопросами по темам;
Topic:
- create.php – страница создания новой темы;
- delete.php – страница удаления существующей темы и всех вопросов в ней;
- index.php – страница со списком тем, и числу вопросов по каждой теме;
- view.php – страница со списком вопросов по выбранной теме;
